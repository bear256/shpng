// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/model/raw.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PV struct {
	Ts                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Count                uint64               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PV) Reset()         { *m = PV{} }
func (m *PV) String() string { return proto.CompactTextString(m) }
func (*PV) ProtoMessage()    {}
func (*PV) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a1d9c27c2a459b, []int{0}
}

func (m *PV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PV.Unmarshal(m, b)
}
func (m *PV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PV.Marshal(b, m, deterministic)
}
func (m *PV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PV.Merge(m, src)
}
func (m *PV) XXX_Size() int {
	return xxx_messageInfo_PV.Size(m)
}
func (m *PV) XXX_DiscardUnknown() {
	xxx_messageInfo_PV.DiscardUnknown(m)
}

var xxx_messageInfo_PV proto.InternalMessageInfo

func (m *PV) GetTs() *timestamp.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *PV) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Raw struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	PVs                  []*PV    `protobuf:"bytes,2,rep,name=pVs,proto3" json:"pVs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Raw) Reset()         { *m = Raw{} }
func (m *Raw) String() string { return proto.CompactTextString(m) }
func (*Raw) ProtoMessage()    {}
func (*Raw) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a1d9c27c2a459b, []int{1}
}

func (m *Raw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Raw.Unmarshal(m, b)
}
func (m *Raw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Raw.Marshal(b, m, deterministic)
}
func (m *Raw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Raw.Merge(m, src)
}
func (m *Raw) XXX_Size() int {
	return xxx_messageInfo_Raw.Size(m)
}
func (m *Raw) XXX_DiscardUnknown() {
	xxx_messageInfo_Raw.DiscardUnknown(m)
}

var xxx_messageInfo_Raw proto.InternalMessageInfo

func (m *Raw) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Raw) GetPVs() []*PV {
	if m != nil {
		return m.PVs
	}
	return nil
}

func init() {
	proto.RegisterType((*PV)(nil), "model.PV")
	proto.RegisterType((*Raw)(nil), "model.Raw")
}

func init() { proto.RegisterFile("src/model/raw.proto", fileDescriptor_97a1d9c27c2a459b) }

var fileDescriptor_97a1d9c27c2a459b = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2e, 0x4a, 0xd6,
	0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2f, 0x4a, 0x2c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x05, 0x0b, 0x48, 0xc9, 0xa7, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x05, 0x93, 0x4a,
	0xd3, 0xf4, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x20, 0xea, 0x94, 0xdc, 0xb8,
	0x98, 0x02, 0xc2, 0x84, 0xb4, 0xb8, 0x98, 0x4a, 0x8a, 0x25, 0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d,
	0xa4, 0xf4, 0x20, 0x7a, 0xf4, 0x60, 0x7a, 0xf4, 0x42, 0x60, 0x7a, 0x82, 0x98, 0x4a, 0x8a, 0x85,
	0x44, 0xb8, 0x58, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x82, 0x20,
	0x1c, 0x25, 0x33, 0x2e, 0xe6, 0xa0, 0xc4, 0x72, 0x21, 0x21, 0x2e, 0x96, 0x94, 0xc4, 0x92, 0x44,
	0xb0, 0x51, 0x3c, 0x41, 0x60, 0xb6, 0x90, 0x34, 0x17, 0x73, 0x41, 0x58, 0xb1, 0x04, 0x93, 0x02,
	0xb3, 0x06, 0xb7, 0x11, 0xa7, 0x1e, 0xd8, 0x61, 0x7a, 0x01, 0x61, 0x41, 0x20, 0xd1, 0x24, 0x36,
	0xb0, 0x2d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xbf, 0x56, 0x59, 0xc5, 0x00, 0x00,
	0x00,
}
